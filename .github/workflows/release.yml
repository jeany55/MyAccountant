name: ðŸš€ Release
run-name: New ${{ inputs.versionType }} version
on:
  # Run manually only
  workflow_dispatch:
    branches:
      - main
    inputs:
      versionType:
        description: 'Type of change'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      changeNotes:
        description: Change notes to attach to release
        default: ""
      deployToCurse:
        description: "Deploy to Curse"
        default: true
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checks-out repository
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN_GIT }}

      # Increment version and replace in the toc files
      - name: Update version
        run: |
          VERSION=$(grep -o '[0-9]*\.[0-9]*\.[0-9]*' MyAccountant.toc)
          
          arrIN=(${VERSION//./ })
          
          MAJOR_VERSION=${arrIN[0]}
          MINOR_VERSION=${arrIN[1]}
          PATCH_VERSION=${arrIN[2]}
          VERSION_TYPE="${{ inputs.versionType }}"
          
          if [[ $VERSION_TYPE == "patch" ]]; then
            PATCH_VERSION=$(( PATCH_VERSION + 1 ))
          elif [[ $VERSION_TYPE == "minor" ]]; then
            PATCH_VERSION=0
            MINOR_VERSION=$(( MINOR_VERSION + 1 ))
          elif [[ $VERSION_TYPE == "major" ]]; then
            PATCH_VERSION=0
            MINOR_VERSION=0
            MAJOR_VERSION=$(( MAJOR_VERSION + 1 ))
          fi

          newVersion="${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"
          
          sed -i -e "s/$VERSION/$newVersion/g" MyAccountant.toc
          sed -i -e "s/$VERSION/$newVersion/g" MyAccountant-BCC.toc
          sed -i -e "s/$VERSION/$newVersion/g" MyAccountant-Cata.toc
          sed -i -e "s/$VERSION/$newVersion/g" MyAccountant-Classic.toc
          sed -i -e "s/$VERSION/$newVersion/g" MyAccountant-Mists.toc
          sed -i -e "s/$VERSION/$newVersion/g" MyAccountant-WOTLK.toc

          echo "VERSION=$newVersion" >> $GITHUB_ENV

      # Commit the change made in the previous step (and tag the version)
      - name: Commit and tag
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN_GIT }}
        run: |
          git config user.email "bex5959@gmail.com"
          git config user.name "Service account"

          git add MyAccountant.toc
          git add MyAccountant-BCC.toc
          git add MyAccountant-Cata.toc
          git add MyAccountant-Classic.toc
          git add MyAccountant-Mists.toc
          git add MyAccountant-WOTLK.toc
          
          git commit -m "Update to version $VERSION"
          git push

          git tag -a "v$VERSION" -m "Release version ${VERSION}"
          git push origin tag "v$VERSION"

      # Remove anything unneeded for the build artifact
      # Then put it into all into a nested folder and zip it
      - name: Generate zip
        run : |
          echo "Making zip for version $VERSION"

          rm -rf ./.git
          rm -rf ./.github
          rm .gitignore
          rm .lua-style
          rm LICENSE
          rm README.md
          rm -rf Docs

          rm RunTests.lua
          rm -rf Libs/WoWUnit
          rm -rf Tests

          mkdir MyAccountant
          mv * MyAccountant || true

          zip -r "MyAccountant-${VERSION}.zip" ./ 
      
      # Upload zip made in previous step as a github release and attach to version tag
      - name: Create release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: MyAccountant-${{ env.VERSION }}.zip
          token: ${{ secrets.ACCESS_TOKEN_GIT }}
          tag: "v${{ env.VERSION }}"
          body: ${{ inputs.changeNotes }}
      
      # Upload built zip to Curse
      - name: Upload to CurseForge
        if: ${{ inputs.deployToCurse }}
        uses: itsmeow/curseforge-upload@v3
        with:
          file_path: MyAccountant-${{ env.VERSION }}.zip
          game_endpoint: "wow"
          changelog: ${{ inputs.changeNotes }}
          project_id: "1299016"
          display_name: ${{ env.VERSION }}
          token: ${{ secrets.CURSE_TOKEN }}
          game_versions: "1.15.7,11.2.0,5.5.0,4.4.2,3.4.4,2.5.4"
